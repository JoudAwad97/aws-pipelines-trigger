version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo "$(aws ecr get-login-password --region $AWS_DEFAULT_REGION)" | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - sudo yum install -y unzip
      - unzip /codebuild/output/src*-lambda_output/path_to_your_zipfile.zip -d /
  build:
    commands:
      - echo Docker build and tagging started on `date`
      - docker build -t $REPOSITORY_URI:latest -t $REPOSITORY_URI:$IMAGE_TAG -t $REPOSITORY_URI:$IMAGE_TAG_ENV  .
      - echo Docker build and tagging completed on `date`
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:$IMAGE_TAG_ENV
      # passing data dynamically from the buildspec to the taskdef.json
      #- echo Update the REPOSITORY_URI:IMAGE_TAG in task definition...
      #- echo Container image to be used $REPOSITORY_URI:$IMAGE_TAG
      #- sed -i 's@REPOSITORY_URI@'$REPOSITORY_URI'@g' taskdef.json
      #- sed -i 's@IMAGE_TAG@'$IMAGE_TAG'@g' taskdef.json
      - echo '[{"name":"domino-core-api","imageUri":"'$REPOSITORY_URI:$IMAGE_TAG'"}]' > imageDetail.json
artifacts:
  files:
    - "appspec.yaml"
    - "taskdef.json"
    - imageDetail.json
